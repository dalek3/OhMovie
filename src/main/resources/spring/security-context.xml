<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="customAccessDenied" class="com.ohmovie.security.CustomAccessDeniedHandler"></bean>
	<!-- <bean id="customLoginSuccess" class="com.ohmovie.security.CustomLoginSuccessHandler"></bean> -->
	<bean id="customPasswordEncoder" class="com.ohmovie.security.CustomNoOpPasswordEncoder"></bean>
	<bean id="customUserDetailsService" class="com.ohmovie.security.CustomUserDetailsService"></bean>
	<!-- <bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean> -->
	
	<security:http>
	
		<security:intercept-url pattern="/sample/all" access="permitAll"/>
		
		<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')"/>

		<security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')"/>
			
		<!-- <security:form-login login-page="/auth/login" authentication-success-handler-ref="customLoginSuccess"/> -->
		<security:form-login login-page="/auth/login" />
	
		<!-- <security:access-denied-handler error-page="/accessError"/> -->
		<security:access-denied-handler ref="customAccessDenied"/>
		
		<security:logout logout-url="/customLogout" invalidate-session="true" logout-success-url="/"/>
		
	</security:http>
	
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetailsService">
			<!-- <security:user-service>
			
				<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/>
				
				<security:user name="admin" password="{noop}admin" authorities="ROLE_MEMBER, ROLE_ADMIN"/>
			
			</security:user-service> -->
			<!-- <security:jdbc-user-service data-source-ref="dataSource" users-by-username-query="select u_id, u_pw, enabled from member where u_id = ? " authorities-by-username-query="select u_id, auth from member_auth where u_id = ? "/> -->
			
			<!-- <security:password-encoder ref="bcryptPasswordEncoder" /> -->
			<security:password-encoder ref="customPasswordEncoder"/>
			
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
